name: Frontend Tests

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]

jobs:
  lint:
    name: Lint Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: thread-frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: thread-frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check Prettier formatting
        run: npm run format:check

      - name: TypeScript type check
        run: npm run typecheck

  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: lint
    defaults:
      run:
        working-directory: thread-frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: thread-frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: thread-frontend/dist
          retention-days: 1
          if-no-files-found: error

  test:
    name: Test Frontend
    runs-on: ubuntu-latest
    needs: lint
    defaults:
      run:
        working-directory: thread-frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: thread-frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --run

      - name: Generate coverage report
        run: npm run test:coverage -- --run

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
          retention-days: 7
          if-no-files-found: warn
